{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name catan.core, :imports nil, :requires {canvas monet.canvas, monet.canvas monet.canvas}, :uses nil, :defs {canvas-dom {:name catan.core/canvas-dom, :file "/home/marhs/dev/catan/src/catan/core.cljs", :line 9, :column 1, :end-line 9, :end-column 16, :meta {:file "/home/marhs/dev/catan/src/catan/core.cljs", :line 9, :column 6, :end-line 9, :end-column 16}}, height {:name catan.core/height, :file "/home/marhs/dev/catan/src/catan/core.cljs", :line 14, :column 1, :end-line 14, :end-column 12, :meta {:file "/home/marhs/dev/catan/src/catan/core.cljs", :line 14, :column 6, :end-line 14, :end-column 12}}, base-state {:name catan.core/base-state, :file "/home/marhs/dev/catan/src/catan/core.cljs", :line 11, :column 1, :end-line 11, :end-column 16, :meta {:file "/home/marhs/dev/catan/src/catan/core.cljs", :line 11, :column 6, :end-line 11, :end-column 16}}, cos {:protocol-inline nil, :meta {:file "/home/marhs/dev/catan/src/catan/core.cljs", :line 4, :column 7, :end-line 4, :end-column 10, :arglists (quote ([x]))}, :name catan.core/cos, :variadic false, :file "/home/marhs/dev/catan/src/catan/core.cljs", :end-column 10, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 4, :end-line 4, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, width {:name catan.core/width, :file "/home/marhs/dev/catan/src/catan/core.cljs", :line 13, :column 1, :end-line 13, :end-column 11, :meta {:file "/home/marhs/dev/catan/src/catan/core.cljs", :line 13, :column 6, :end-line 13, :end-column 11}}, pixel-from-coords {:protocol-inline nil, :meta {:file "/home/marhs/dev/catan/src/catan/core.cljs", :line 26, :column 7, :end-line 26, :end-column 24, :arglists (quote ([x y w h]))}, :name catan.core/pixel-from-coords, :variadic false, :file "/home/marhs/dev/catan/src/catan/core.cljs", :end-column 24, :method-params ([x y w h]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 26, :end-line 26, :max-fixed-arity 4, :fn-var true, :arglists (quote ([x y w h]))}, size {:name catan.core/size, :file "/home/marhs/dev/catan/src/catan/core.cljs", :line 12, :column 1, :end-line 12, :end-column 10, :meta {:file "/home/marhs/dev/catan/src/catan/core.cljs", :line 12, :column 6, :end-line 12, :end-column 10}}, monet-canvas {:name catan.core/monet-canvas, :file "/home/marhs/dev/catan/src/catan/core.cljs", :line 16, :column 1, :end-line 16, :end-column 18, :meta {:file "/home/marhs/dev/catan/src/catan/core.cljs", :line 16, :column 6, :end-line 16, :end-column 18}}, hex-corner {:protocol-inline nil, :meta {:file "/home/marhs/dev/catan/src/catan/core.cljs", :line 18, :column 7, :end-line 18, :end-column 17, :arglists (quote ([center-x center-y size i]))}, :name catan.core/hex-corner, :variadic false, :file "/home/marhs/dev/catan/src/catan/core.cljs", :end-column 17, :method-params ([center-x center-y size i]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 18, :end-line 18, :max-fixed-arity 4, :fn-var true, :arglists (quote ([center-x center-y size i]))}, move-line-to {:protocol-inline nil, :meta {:file "/home/marhs/dev/catan/src/catan/core.cljs", :line 30, :column 7, :end-line 30, :end-column 19, :arglists (quote ([ctx x y size n]))}, :name catan.core/move-line-to, :variadic false, :file "/home/marhs/dev/catan/src/catan/core.cljs", :end-column 19, :method-params ([ctx x y size n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 30, :end-line 30, :max-fixed-arity 5, :fn-var true, :arglists (quote ([ctx x y size n]))}, hexagon {:protocol-inline nil, :meta {:file "/home/marhs/dev/catan/src/catan/core.cljs", :line 34, :column 7, :end-line 34, :end-column 14, :arglists (quote ([state]))}, :name catan.core/hexagon, :variadic false, :file "/home/marhs/dev/catan/src/catan/core.cljs", :end-column 14, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 34, :end-line 34, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, sin {:protocol-inline nil, :meta {:file "/home/marhs/dev/catan/src/catan/core.cljs", :line 5, :column 7, :end-line 5, :end-column 10, :arglists (quote ([x]))}, :name catan.core/sin, :variadic false, :file "/home/marhs/dev/catan/src/catan/core.cljs", :end-column 10, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 5, :end-line 5, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:y :w :background :h :x}, :order [:x :y :h :w :background]}, :doc nil}